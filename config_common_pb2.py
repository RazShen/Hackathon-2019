# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config_common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='config_common.proto',
  package='Config.Common',
  syntax='proto2',
  serialized_options=_b('\n\027com.incapsula.visit.genB\022CommonConfigProtos'),
  serialized_pb=_b('\n\x13\x63onfig_common.proto\x12\rConfig.Common\")\n\nHttpHeader\x12\x0c\n\x04name\x18\x01 \x02(\x0c\x12\r\n\x05value\x18\x02 \x02(\x0c\"R\n\x05Regex\x12;\n\x04type\x18\x01 \x01(\x0e\x32\x1d.Config.Common.IncapRegexType:\x0eRGX_TYPE_INCAP\x12\x0c\n\x04\x65xpr\x18\x02 \x02(\x0c*7\n\x0eIncapRegexType\x12\x12\n\x0eRGX_TYPE_INCAP\x10\x01\x12\x11\n\rRGX_TYPE_PCRE\x10\x02\x42-\n\x17\x63om.incapsula.visit.genB\x12\x43ommonConfigProtos')
)

_INCAPREGEXTYPE = _descriptor.EnumDescriptor(
  name='IncapRegexType',
  full_name='Config.Common.IncapRegexType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RGX_TYPE_INCAP', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RGX_TYPE_PCRE', index=1, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=165,
  serialized_end=220,
)
_sym_db.RegisterEnumDescriptor(_INCAPREGEXTYPE)

IncapRegexType = enum_type_wrapper.EnumTypeWrapper(_INCAPREGEXTYPE)
RGX_TYPE_INCAP = 1
RGX_TYPE_PCRE = 2



_HTTPHEADER = _descriptor.Descriptor(
  name='HttpHeader',
  full_name='Config.Common.HttpHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Config.Common.HttpHeader.name', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Config.Common.HttpHeader.value', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=79,
)


_REGEX = _descriptor.Descriptor(
  name='Regex',
  full_name='Config.Common.Regex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Config.Common.Regex.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expr', full_name='Config.Common.Regex.expr', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=81,
  serialized_end=163,
)

_REGEX.fields_by_name['type'].enum_type = _INCAPREGEXTYPE
DESCRIPTOR.message_types_by_name['HttpHeader'] = _HTTPHEADER
DESCRIPTOR.message_types_by_name['Regex'] = _REGEX
DESCRIPTOR.enum_types_by_name['IncapRegexType'] = _INCAPREGEXTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HttpHeader = _reflection.GeneratedProtocolMessageType('HttpHeader', (_message.Message,), dict(
  DESCRIPTOR = _HTTPHEADER,
  __module__ = 'config_common_pb2'
  # @@protoc_insertion_point(class_scope:Config.Common.HttpHeader)
  ))
_sym_db.RegisterMessage(HttpHeader)

Regex = _reflection.GeneratedProtocolMessageType('Regex', (_message.Message,), dict(
  DESCRIPTOR = _REGEX,
  __module__ = 'config_common_pb2'
  # @@protoc_insertion_point(class_scope:Config.Common.Regex)
  ))
_sym_db.RegisterMessage(Regex)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
